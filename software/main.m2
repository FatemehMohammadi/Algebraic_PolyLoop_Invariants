restart
---Loading the main algorithm.
load "particularform.m2"
load "computingtruncatedideals.m2"
computeInvariants = method()
computeInvariants(String, ZZ) := (u,d)->(
t1 = cpuTime();
---Loading an example 
load u;    
M = binomial(n+d,d);
U = binomial(n+d,d);
K = QQ;
R2  = QQ[z_1..z_M][x_1..x_(n+1), y_1..y_M];
R = K[x_1..x_(n+1),z_1..z_M,y_1..y_M,e,,w_1..w_n];
---Extracting polynomial mappings and initial values from an example.
G = (guard())_0;
F = join(mapping(),{x_(n+1)*G});
 A = {x_1=>(initial())_0};
	    t =  2;
	    while t<n+1 do(
		A =join(A,{x_t=>(initial())_(t-1)});
		t=t+1; 
		);
c = join(initial(),{1});
computebasis(n,d,F,c);
---This is output: Giving a vector basis and the dimension for the dth truncated ideal of an example.
t4 = cpuTime();
if d ==1 then (
<< "The " << d<<"st truncated ideal is generated by: "<< endl;
i=0;
while i < numgens source A do(
<< A_i<< endl;
i=i+1;
);
<< " and the dimension of the truncated ideal is "<<numgens source A<<". "<< endl;
<< "The running time is " <<t4-t1<< endl;
);
if d ==2 then (
<< "The " << d<<"nd truncated ideal is generated by: "<< endl;
i=0;
while i < numgens source A do(
<< A_i<< endl;
i=i+1;
);
<< " and the dimension of the truncated ideal is "<<numgens source A<<". "<< endl;
 << "The running time is " <<t4-t1<< endl;
);
if d ==3 then (
<< "The " << d<<"rd truncated ideal is generated by: "<< endl;
i=0;
while i < numgens source A do(
<< A_i<< endl;
i=i+1;
);
<< " and the dimension of the truncated ideal is "<<numgens source A<<". "<< endl;
 << "The running time is " <<t4-t1<< endl;
);
if d >3 then (
<< "The " << d<<"th truncated ideal is generated by: "<< endl;
i=0;
while i < numgens source A do(
<< A_i<< endl;
i=i+1;
);
<< " and the dimension of the truncated ideal is "<<numgens source A<<". "<< endl;
 << "The running time is " <<t4-t1<< endl;
);
particularform(A);
t2 =cpuTime();
<< "------------------------------------------------------"<< endl;
i=0;
if numgens source H ==0 then(
<< "There is no general polynomial of a form g(x)-g(w)=0. "<< endl;
);
if numgens source H>0 then(
<< "General polynomal invariants of a form g(x)-g(w)=0 are "<< endl;
while i < numgens source H do(
<< H_i<< endl;
i=i+1;
);
);
<< "where w_i is an initial value of x_i"<< endl;
<< "The running time is " <<t2-t1<< endl;
)
end --
